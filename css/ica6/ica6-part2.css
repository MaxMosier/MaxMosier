body {
  background-color: olive;
}

#flex-parent {
  display: flex;
  background-color: orangered;
}
#flex-parent p {
  padding: 5vw;
}

#flex-child1 {
  order: 3;
}
#flex-child2 {
  order: 4;
}
#flex-child3 {
  order: 2;
}
#flex-child4 {
  order: 1;
}

#grid-parent {
  display: grid;
}
#grid-parent h1 {
  background-color: grey;
  padding: 3vw 5vh;
  margin: .5vw; /* Modified this to make them a bit closer together!*/
}

/* #no1 {
  grid-row: 1/2;
  grid-column: 1/2;
}
#no2 {
  grid-row: 1/2;
  grid-column: 2/3;
} */

#no3 {
  grid-row: 1/2;
  grid-column: 3/4;
}
#no0 {
  grid-row: 4/5;
  grid-column: 2/3;
}

/* Though I assume this isn't great practice, this should be enough for this very specific page.
   Once the width and height are defined by 3 and 0 respectively, all others will be ordered
   automatically, assuming they are placed in order on the HTML page.

   If I wanted to constrain all numbers to be in their specific spots regardless of order on the page,
   I would define them all like I did in the commented-out lines.
   
   Alternatively, I could have just used a grid-template-areas layout, as well... */
